#!/usr/bin/perl

use strict;
use warnings;

use Getopt::Long;
use JSON;
use LWP::UserAgent;

use Data::Dumper;

my $token   = "Gm5aCJyE9wngm5eW153Jzgx2BkM1d0";
my $msg_url = "https://api.pushover.net/1/messages.json";
my $snd_url = "https://api.pushover.net/1/sounds.json";


my $pms = {'token' => $token};

GetOptions($pms, 'token|a=s',
                 'url|l=s',
                 'url_title|lt=s',
                 'priority|p=i',
                 'sound|s=s',
                 'list-sounds|ls',
                 'timestamp|d=i',
                 'title|t=s',
                 'user|u=s',
                 'help|h');

foreach(@ARGV) {
    $pms->{message} .= "$_ ";
}

if($pms->{'list-sounds'}) {
    my $json = send_request($snd_url, {token => $token}, 1);
        
    if($json->{status} == 1) {
        print "Available notification sounds:\n\n";

        foreach(sort(keys($json->{sounds}))) {
            print "    $_ ($json->{sounds}->{$_})\n";
        }
    } else {
        print_errors($json);
    }
} elsif(!$pms->{message} || !exists($pms->{user}) || exists($pms->{help})) {
    print_usage();
} else {
    my $json = send_request($msg_url, $pms);

    if($json->{status} != 1) {
        print_errors($json);
    }
}

sub send_request {
    my ($url, $para, $get) = @_;
    
    my $ua = LWP::UserAgent->new();    
    my $res = $get ? $ua->get($url, $para) : $ua->post($url, $para);
    
    if($res->header('Client-Warning') && $res->header('Client-Warning') eq 'Internal response') {
        return {status => -1, errors => ['Server unreachable']};
    } else {
        return decode_json($res->content);
    }
}

sub print_errors {
    my ($json) = @_;

    print "Status: $json->{status}\n";
    foreach(@{$json->{errors}}) {
        print "    $_\n";
    }
}

sub print_usage {
    print "$0 -u USERTOKEN [OPTIONS] MESSAGE\n";
    print "OPTIONS\n";
    print "  -a,  --token APITOKEN               Optional API token\n";
    print "  -d,  --timestamp UNIXTIMESTAMP      Optional timestamp\n";
    print "  -h,  --help                         Show this help\n";
    print "  -l,  --url URL                      Optional link\n";
    print "  -lt, --url_title URLTITLE           Optional url title\n";
    print "  -ls, --list-sounds                  Retrieve available sounds\n";
    print "  -p,  --priority -1|0|1              Optional priority(-1 - 2)\n";
    print "  -s,  --sound SOUND                  Optional sounds. See -ls for possible sounds\n";
    print "  -t,  --title TITLE                  Optional title\n";
    print "  -u,  --user USERTOKEN               User token\n";
}
